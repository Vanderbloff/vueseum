name: Deploy Backend to Azure VM

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:     

concurrency:
  group: "vm-deploy"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./vueseum
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      
      - name: Transfer and Deploy
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Find the JAR file
            JAR_FILE=$(find ${{ github.workspace }}/vueseum/target -name "*.jar" -type f)
            if [ -z "$JAR_FILE" ]; then
              echo "No JAR file found in target directory"
              ls -la ./target
              exit 1
            fi
            
            # Split file into chunks and encode each chunk
            split -b 1M "$JAR_FILE" "/tmp/chunk-"
            
            # First, create directory and cleanup any old files
            az vm run-command invoke \
              --resource-group vueseum-prod-rg \
              --name vueseum-app-prod \
              --command-id RunShellScript \
              --scripts "mkdir -p /tmp/deploy && rm -f /tmp/deploy/chunk-* /tmp/deploy/vueseum.jar"
            
            # Transfer each chunk
            for chunk in /tmp/chunk-*; do
              ENCODED_CHUNK=$(base64 -w 0 "$chunk")
              CHUNK_NAME=$(basename "$chunk")
              
              az vm run-command invoke \
                --resource-group vueseum-prod-rg \
                --name vueseum-app-prod \
                --command-id RunShellScript \
                --scripts "echo '$ENCODED_CHUNK' | base64 -d > /tmp/deploy/$CHUNK_NAME"
            done
            
            # Combine chunks and deploy
            az vm run-command invoke \
              --resource-group vueseum-prod-rg \
              --name vueseum-app-prod \
              --command-id RunShellScript \
              --scripts "
                cd /tmp/deploy
                cat chunk-* > vueseum.jar
                rm chunk-*
                
                if [ -f vueseum.jar ]; then
                  cd /opt/vueseum && ./deploy-backend.sh /tmp/deploy/vueseum.jar
                  rm -rf /tmp/deploy
                  systemctl is-active vueseum-backend.service || echo 'Service check failed'
                else
                  echo 'JAR file not found after transfer'
                  exit 1
                fi"
            
            # Cleanup local chunks
            rm -f /tmp/chunk-*
