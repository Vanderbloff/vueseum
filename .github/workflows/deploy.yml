name: Deploy Backend to Azure VM

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:     

concurrency:
  group: "vm-deploy"
  cancel-in-progress: false


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./vueseum
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      
      - name: Transfer and Deploy
        uses: azure/CLI@v1
        with:
          inlineScript: |

            # Debug: Show current location and structure
            pwd
            ls -la
            
            # Find the JAR file
            JAR_FILE=$(find ${{ github.workspace }}/vueseum/target -name "*.jar" -type f)
            if [ -z "$JAR_FILE" ]; then
              echo "No JAR file found in target directory"
              ls -la ./target  # Debug: show contents of target directory
              exit 1
            fi
            echo "Found JAR file: $JAR_FILE"

            # Create storage account if it doesn't exist
            az storage account create \
              --name vueseumdeploy \
              --resource-group vueseum-prod-rg \
              --sku Standard_LRS \
              --kind StorageV2 \
              2>/dev/null || true

            # Create temporary container
            CONTAINER_NAME="deploy-$(date +%s)"
            az storage container create \
              --account-name vueseumdeploy \
              --name $CONTAINER_NAME \
              --auth-mode login

            # Upload JAR
            az storage blob upload \
              --account-name vueseumdeploy \
              --container-name $CONTAINER_NAME \
              --name vueseum.jar \
              --file "$JAR_FILE" \
              --auth-mode login

            # Generate SAS token for the specific blob
             END_TIME=$(date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ')
             SAS_TOKEN=$(az storage blob generate-sas \
             --account-name vueseumdeploy \
             --container-name $CONTAINER_NAME \
             --name vueseum.jar \
             --permissions r \
             --expiry $END_TIME \
             --auth-mode login \
             --as-user \
             --output tsv)

            # Get blob URL
            BLOB_URL=$(az storage blob url \
             --account-name vueseumdeploy \
             --container-name $CONTAINER_NAME \
            --name vueseum.jar \
            --output tsv)

            # Create temp directory and download JAR on VM
            az vm run-command invoke \
              --resource-group vueseum-prod-rg \
              --name vueseum-app-prod \
              --command-id RunShellScript \
              --scripts "
                mkdir -p /tmp/deploy
                # Download using curl and SAS token
                curl -o /tmp/deploy/vueseum.jar '${BLOB_URL}?${SAS_TOKEN}'
                
                if [ -f /tmp/deploy/vueseum.jar ]; then
                  # First ensure the directory exists
                  sudo mkdir -p /opt/vueseum/backend/releases
                  # Then run the deployment script with NOPASSWD sudo
                  cd /opt/vueseum && SUDO_ASKPASS=/bin/echo sudo -A -u vueseum ./deploy-backend.sh /tmp/deploy/vueseum.jar
                  rm -rf /tmp/deploy
                  sudo systemctl is-active vueseum-backend.service || echo 'Service check failed'
                else
                  echo 'JAR file not found'
                  exit 1
                fi"

            # Cleanup: Delete container
            az storage container delete \
              --account-name vueseumdeploy \
              --name $CONTAINER_NAME \
              --auth-mode login
