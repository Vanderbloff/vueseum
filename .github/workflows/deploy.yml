name: Deploy Backend to Azure VM

on:
  push:
    branches: [ "master" ]
    paths:
      - 'vueseum/**'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:     

concurrency:
  group: "backend-deploy"
  cancel-in-progress: false


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./vueseum
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      
      - name: Transfer and Deploy
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az vm run-command invoke \
              --resource-group vueseum-prod-rg \
              --name vueseum-app-prod \
              --command-id RunShellScript \
              --scripts "
                # Create directory and copy Dockerfile
                mkdir -p /opt/vueseum/backend
                cat > /opt/vueseum/backend/Dockerfile << 'EOF'
                $(cat ${{ github.workspace }}/vueseum/Dockerfile)
                EOF

                # Copy compose file if it doesn't exist
                if [ ! -f /opt/vueseum/docker-compose.prod.yml ]; then
                  cat > /opt/vueseum/docker-compose.prod.yml << 'EOF'
                  $(cat ${{ github.workspace }}/docker-compose.prod.yml)
                  EOF
                fi

                # Run deployment script
                cd /opt/vueseum && ./deploy-containers.sh
                "
