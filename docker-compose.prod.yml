services:
  frontend:
    build: 
      context: /opt/vueseum/frontend
      dockerfile: /opt/vueseum/frontend/Dockerfile
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - ORIGIN=https://vueseum.io
      - PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - backend
    networks:
      - vueseum-network
    mem_limit: 128m
    mem_reservation: 64m

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
    networks:
      - vueseum-network
    mem_limit: 64m
    mem_reservation: 32m

  backend:
    build: 
      context: /opt/vueseum/backend
      dockerfile: /opt/vueseum/backend/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - /var/log/vueseum:/var/log/vueseum:rw
    user: "1000:1000"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms384m -Xmx768m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/vueseum/heapdump.hprof
      - LOG_PATH=/var/log/vueseum
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - vueseum-network
    mem_limit: 1024m
    mem_reservation: 512m

networks:
  vueseum-network:
    name: vueseum-network
    driver: bridge

volumes:
  frontend_logs:
    driver: local
  backend_logs:
    driver: local
